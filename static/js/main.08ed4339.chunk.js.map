{"version":3,"sources":["logo.svg","sortingAlgorithms/sortingAlgorithms.js","SortingVisualizer/SortingVisualizer.jsx","App.js","reportWebVitals.js","index.js"],"names":["getMergeSortAnimations","array","animations","length","auxiliaryArray","slice","mergeSortHelper","getbubblesortAnimations","animations2","console","log","i","j","push","height1","height2","temp","bubble_sort","getinsertionsortAnimations","animations3","n","key","insertion_sort","mainArray","startIdx","endIdx","middleIdx","Math","floor","k","doMerge","ANIMATION_SPEED_MS","PRIMARY_COLOR","SECONDARY_COLOR","SortingVisualizer","props","state","this","resetArray","randomIntFromInterval","setState","arrayBars","document","getElementsByClassName","barOneIdx","barTwoIdx","barOneStyle","style","barTwoStyle","color","setTimeout","backgroundColor","newHeight","height","javaScriptSortedArray","sort","a","b","mergeSortedArray","arraysAreEqual","bubbleSortedArray","insertionSortedArray","className","map","value","idx","onClick","mergeSort","insertionSort","bubbleSort","React","Component","min","max","random","arrayOne","arrayTwo","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.08ed4339.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export function getMergeSortAnimations(array) {\r\n  const animations = [];\r\n  if (array.length <= 1) return array;\r\n  const auxiliaryArray = array.slice();\r\n  mergeSortHelper(array, 0, array.length - 1, auxiliaryArray, animations);\r\n  return animations;\r\n}\r\n\r\nexport function getbubblesortAnimations(array) {\r\n  const animations2 = [];\r\n  if (array.length <= 1) return array;\r\n  \r\n  bubble_sort(array, animations2);\r\n  return animations2;\r\n}\r\n\r\nexport function getinsertionsortAnimations(array) {\r\n  const animations3 = [];\r\n  if (array.length <= 1) return array;\r\n  \r\n  insertion_sort(array, animations3);\r\n  return animations3;\r\n}\r\n\r\nfunction insertion_sort(array,animations3)\r\n{\r\n  let n = array.length; \r\n        for (let i = 1; i < n; i++) { \r\n            let key = array[i]; \r\n            let j = i - 1; \r\n  \r\n            \r\n            while (j > 0 && array[j] > key) {\r\n\r\n                animations3.push([i, j]);\r\n                animations3.push([i, j]);\r\n\r\n                animations3.push([j+1, array[j]]);\r\n                array[j + 1] = array[j]; \r\n                j = j - 1; \r\n            } \r\n\r\n            animations3.push([i, j]);\r\n            animations3.push([i, j]);\r\n            animations3.push([j+1, key]);\r\n\r\n            array[j + 1] = key; \r\n        }\r\n\r\n}\r\n\r\n\r\nfunction mergeSortHelper(\r\n  mainArray,\r\n  startIdx,\r\n  endIdx,\r\n  auxiliaryArray,\r\n  animations,\r\n) {\r\n  if (startIdx === endIdx) return;\r\n  const middleIdx = Math.floor((startIdx + endIdx) / 2);\r\n  mergeSortHelper(auxiliaryArray, startIdx, middleIdx, mainArray, animations);\r\n  mergeSortHelper(auxiliaryArray, middleIdx + 1, endIdx, mainArray, animations);\r\n  doMerge(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations);\r\n}\r\n\r\nfunction doMerge(\r\n  mainArray,\r\n  startIdx,\r\n  middleIdx,\r\n  endIdx,\r\n  auxiliaryArray,\r\n  animations,\r\n) {\r\n  let k = startIdx;\r\n  let i = startIdx;\r\n  let j = middleIdx + 1;\r\n  while (i <= middleIdx && j <= endIdx) {\r\n   \r\n    animations.push([i, j]);\r\n  \r\n    animations.push([i, j]);\r\n    if (auxiliaryArray[i] <= auxiliaryArray[j]) {\r\n     \r\n      animations.push([k, auxiliaryArray[i]]);\r\n      mainArray[k++] = auxiliaryArray[i++];\r\n    } else {\r\n     \r\n      animations.push([k, auxiliaryArray[j]]);\r\n      mainArray[k++] = auxiliaryArray[j++];\r\n    }\r\n  }\r\n  while (i <= middleIdx) {\r\n  \r\n    animations.push([i, i]);\r\n  \r\n    animations.push([i, i]);\r\n    \r\n    animations.push([k, auxiliaryArray[i]]);\r\n    mainArray[k++] = auxiliaryArray[i++];\r\n  }\r\n  while (j <= endIdx) {\r\n \r\n    animations.push([j, j]);\r\n    \r\n    animations.push([j, j]);\r\n    \r\n    animations.push([k, auxiliaryArray[j]]);\r\n    mainArray[k++] = auxiliaryArray[j++];\r\n  }\r\n}\r\n\r\n\r\nfunction bubble_sort(array,animations2)\r\n{\r\n  console.log(\"I am in bubble js function\");\r\n  for(let i=array.length-1;i>0;i--)\r\n    {\r\n\r\n        for(let j=0;j<i;j++)\r\n        {\r\n          animations2.push([j, j+1]);\r\n  \r\n          animations2.push([j, j+1]);\r\n          let height1=array[j];\r\n          let height2=array[j+1];\r\n\r\n            if(array[j]>array[j+1])\r\n            { \r\n              let temp=array[j];\r\n              array[j]=array[j+1];\r\n              array[j+1]=temp;\r\n            \r\n              animations2.push([j, height2]);\r\n              animations2.push([j+1, height1]);\r\n            }\r\n            else\r\n            {\r\n              animations2.push([j, height1]);\r\n              animations2.push([j+1, height2]);\r\n            }\r\n\r\n        }\r\n    }\r\n    //console.log(\"I am in function\");\r\n}\r\n","import React from 'react';\r\nimport {getMergeSortAnimations} from '../sortingAlgorithms/sortingAlgorithms.js';\r\nimport {getbubblesortAnimations} from '../sortingAlgorithms/sortingAlgorithms.js';\r\nimport {getinsertionsortAnimations} from '../sortingAlgorithms/sortingAlgorithms.js';\r\nimport './SortingVisualizer.css';\r\n\r\nlet ANIMATION_SPEED_MS =10;\r\n\r\nconst NUMBER_OF_ARRAY_BARS = 80;\r\n\r\nconst PRIMARY_COLOR = 'turquoise';\r\n\r\nconst SECONDARY_COLOR = 'red';\r\n\r\nexport default class SortingVisualizer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      array: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.resetArray();\r\n  }\r\n\r\n  resetArray() {\r\n    const array = [];\r\n    for (let i = 0; i < NUMBER_OF_ARRAY_BARS; i++) {\r\n      array.push(randomIntFromInterval(5, 500));\r\n    }\r\n    this.setState({array});\r\n  }\r\n\r\n  mergeSort() {\r\n    const animations = getMergeSortAnimations(this.state.array);\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const arrayBars = document.getElementsByClassName('array-bar');\r\n      const isColorChange = i % 3 !== 2;\r\n      if (isColorChange) {\r\n        const [barOneIdx, barTwoIdx] = animations[i];\r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        const barTwoStyle = arrayBars[barTwoIdx].style;\r\n        const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = color;\r\n          barTwoStyle.backgroundColor = color;\r\n        }, i * ANIMATION_SPEED_MS);\r\n      } else {\r\n        setTimeout(() => {\r\n          const [barOneIdx, newHeight] = animations[i];\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          barOneStyle.height = `${newHeight}px`;\r\n        }, i * ANIMATION_SPEED_MS);\r\n      }\r\n    }\r\n  }\r\n\r\n  quickSort() {\r\n   \r\n \r\n  }\r\n\r\n  insertionSort() {\r\n    const ANIMATION_SPEED_MS =8;\r\n    const arrayBars = document.getElementsByClassName('array-bar');\r\n    const barOneStyle = arrayBars[0].style;\r\n    barOneStyle.height = `${0}px`;\r\n\r\n    const animations = getinsertionsortAnimations(this.state.array);\r\n    for (let i = 0; i < animations.length; i++) {\r\n     \r\n      const isColorChange = i % 3 !== 2;\r\n      if (isColorChange) {\r\n        const [barOneIdx, barTwoIdx] = animations[i];\r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        const barTwoStyle = arrayBars[barTwoIdx].style;\r\n        const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = color;\r\n          barTwoStyle.backgroundColor = color;\r\n        }, i * ANIMATION_SPEED_MS);\r\n      } else {\r\n        setTimeout(() => {\r\n          const [barOneIdx, newHeight] = animations[i];\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          barOneStyle.height = `${newHeight}px`;\r\n        }, i * ANIMATION_SPEED_MS);\r\n      }\r\n    }\r\n\r\n \r\n  }\r\n\r\n  bubbleSort() {\r\n    ANIMATION_SPEED_MS =5;\r\n    const animations2 = getbubblesortAnimations(this.state.array);\r\n    for (let i = 0; i < animations2.length; i++) {\r\n      const arrayBars = document.getElementsByClassName('array-bar');\r\n      const isColorChange = (i % 4 === 0 || i % 4 === 1);\r\n      if (isColorChange) {\r\n        const [barOneIdx, barTwoIdx] = animations2[i];\r\n        //console.log(\"in bubble jsx\");\r\n        console.log(arrayBars[barTwoIdx]);\r\n        const barOneStyle = arrayBars[barOneIdx].style;\r\n        const barTwoStyle = arrayBars[barTwoIdx].style;\r\n\r\n        const color = i % 4 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\r\n        setTimeout(() => {\r\n          barOneStyle.backgroundColor = color;\r\n          barTwoStyle.backgroundColor = color;\r\n        }, i * ANIMATION_SPEED_MS);\r\n      } else {\r\n        setTimeout(() => {\r\n          const [barOneIdx, newHeight] = animations2[i];\r\n          const barOneStyle = arrayBars[barOneIdx].style;\r\n          barOneStyle.height = `${newHeight}px`;\r\n\r\n        }, i * ANIMATION_SPEED_MS);\r\n      }\r\n    }\r\n \r\n  }\r\n\r\n\r\n  testSortingAlgorithms() {\r\n    for (let i = 0; i < 100; i++) {\r\n      const array = [];\r\n      const length = randomIntFromInterval(1, 1000);\r\n      for (let i = 0; i < length; i++) {\r\n        array.push(randomIntFromInterval(-1000, 1000));\r\n      }\r\n      const javaScriptSortedArray = array.slice().sort((a, b) => a - b);\r\n      const mergeSortedArray = getMergeSortAnimations(array.slice());\r\n      \r\n      console.log(arraysAreEqual(javaScriptSortedArray, mergeSortedArray));\r\n      const bubbleSortedArray = getbubblesortAnimations(array.slice());\r\n      console.log(arraysAreEqual(javaScriptSortedArray, bubbleSortedArray));\r\n      const insertionSortedArray = getinsertionsortAnimations(array.slice());\r\n      \r\n      console.log(arraysAreEqual(javaScriptSortedArray, insertionSortedArray));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {array} = this.state;\r\n\r\n    return (\r\n      <div className=\"parent\" >\r\n      <div className=\"array-container\">\r\n        {array.map((value, idx) => (\r\n          <div\r\n            className=\"array-bar\"\r\n            key={idx}\r\n            style={{\r\n              backgroundColor: PRIMARY_COLOR,\r\n              height: `${value}px`,\r\n            }}></div>\r\n        ))}\r\n        <br></br>\r\n        <button onClick={() => this.resetArray()}>Generate New Array</button>\r\n        <button onClick={() => this.mergeSort()}>Merge Sort</button>\r\n      \r\n        <button onClick={() => this.insertionSort()}>insertion Sort</button>\r\n        <button onClick={() => this.bubbleSort()}>Bubble Sort</button>\r\n        \r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction randomIntFromInterval(min, max) {\r\n  \r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n\r\nfunction arraysAreEqual(arrayOne, arrayTwo) {\r\n  if (arrayOne.length !== arrayTwo.length) return false;\r\n  for (let i = 0; i < arrayOne.length; i++) {\r\n    if (arrayOne[i] !== arrayTwo[i]) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n","import logo from './logo.svg';\r\nimport './App.css';\r\nimport SortingVisualizer from './SortingVisualizer/SortingVisualizer';\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <SortingVisualizer></SortingVisualizer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}